"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
				1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?"""

#def triangleSum(maxV):
def triangleSum():
	sum_,n = 0,1
	#while n<=maxV:
	while True:
		sum_ += n
		yield sum_
		n += 1	

def factors(n):
	#for div in range(1,int(n**0.5)+1):
	divList = [[div,n/div] for div in range(1,int(n**0.5)+1) if n%div == 0]
	return sorted(reduce(list.__add__,divList))

def triangle(N):
	for i in triangleSum():
		facts = factors(i)
		if len(facts) > N:
			return i

N = 500
print triangle(N)